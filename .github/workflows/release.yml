name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Build darwin arm64
        run: GOOS=darwin GOARCH=arm64 go build -o sniffy-darwin-arm64

      - name: Build darwin amd64
        run: GOOS=darwin GOARCH=amd64 go build -o sniffy-darwin-amd64

      - name: Build linux arm64
        run: GOOS=linux GOARCH=arm64 go build -o sniffy-linux-arm64

      - name: Build linux amd64
        run: GOOS=linux GOARCH=amd64 go build -o sniffy-linux-amd64

      - name: Build windows amd64
        run: GOOS=windows GOARCH=amd64 go build -o sniffy-windows-amd64.exe

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload darwin arm64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./sniffy-darwin-arm64
          asset_name: sniffy-darwin-arm64
          asset_content_type: application/octet-stream

      - name: Upload darwin amd64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./sniffy-darwin-arm64
          asset_name: sniffy-darwin-arm64
          asset_content_type: application/octet-stream
